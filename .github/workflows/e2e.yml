name: E2E Tests (Playwright)

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - 'e2e/**'
      - 'src/**'
      - '.github/workflows/**'
  push:
    branches:
      - main

jobs:
  e2e:
    name: Run E2E tests
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies (production + dev ephemeral)
        run: |
          corepack enable
          pnpm install --frozen-lockfile
          # Install Playwright test runner as ephemeral dev dep without updating lockfile or package.json
          pnpm add -D @playwright/test@latest --no-lockfile --no-save

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        env:
          E2E_BASE_URL: ${{ secrets.E2E_BASE_URL || 'http://localhost:3000' }}
        run: |
          # Run any needed dev server in background if testing local instance. If your E2E target is staging, ensure E2E_BASE_URL is set in repo secrets.
          if [ -z "${E2E_BASE_URL}" ] || [ "${E2E_BASE_URL}" = "http://localhost:3000" ]; then
            echo "Starting local dev server for E2E"
            pnpm build
            pnpm start &
            # wait for server
            n=0; until curl -sSf "http://localhost:3000" >/dev/null || [ $n -ge 30 ]; do n=$((n+1)); sleep 1; done
          fi

          npx playwright test --config=e2e/playwright.config.ts --reporter=list

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: playwright-report
          path: e2e-report || playwright-report || report
